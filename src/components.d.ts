/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';


import {
  StyleType,
  TabType,
} from './objects/types';
import {
  EventEmitter,
} from '@stencil/core';


declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface BrnCheckbox {
      'checked': boolean;
      'type': keyof StyleType;
    }

    interface BrnCollapse {
      'active': boolean;
    }

    interface BrnColumn {
      'columns': number;
      'total': number;
    }

    interface BrnDropdown {
      'active': boolean;
      'closeable': boolean;
    }

    interface BrnRadio {
      'checked': boolean;
      'name': string;
      'type': keyof StyleType;
    }

    interface BrnRow {

    }

    interface BrnSlider {

    }

    interface BrnTab {
      'active': boolean;
      'name': string;
    }

    interface BrnTabs {

    }

    interface BrnToggle {
      'checked': boolean;
      'type': keyof StyleType;
    }
  }


    interface HTMLBrnCheckboxElement extends StencilComponents.BrnCheckbox, HTMLStencilElement {}

    var HTMLBrnCheckboxElement: {
      prototype: HTMLBrnCheckboxElement;
      new (): HTMLBrnCheckboxElement;
    };
    

    interface HTMLBrnCollapseElement extends StencilComponents.BrnCollapse, HTMLStencilElement {}

    var HTMLBrnCollapseElement: {
      prototype: HTMLBrnCollapseElement;
      new (): HTMLBrnCollapseElement;
    };
    

    interface HTMLBrnColumnElement extends StencilComponents.BrnColumn, HTMLStencilElement {}

    var HTMLBrnColumnElement: {
      prototype: HTMLBrnColumnElement;
      new (): HTMLBrnColumnElement;
    };
    

    interface HTMLBrnDropdownElement extends StencilComponents.BrnDropdown, HTMLStencilElement {}

    var HTMLBrnDropdownElement: {
      prototype: HTMLBrnDropdownElement;
      new (): HTMLBrnDropdownElement;
    };
    

    interface HTMLBrnRadioElement extends StencilComponents.BrnRadio, HTMLStencilElement {}

    var HTMLBrnRadioElement: {
      prototype: HTMLBrnRadioElement;
      new (): HTMLBrnRadioElement;
    };
    

    interface HTMLBrnRowElement extends StencilComponents.BrnRow, HTMLStencilElement {}

    var HTMLBrnRowElement: {
      prototype: HTMLBrnRowElement;
      new (): HTMLBrnRowElement;
    };
    

    interface HTMLBrnSliderElement extends StencilComponents.BrnSlider, HTMLStencilElement {}

    var HTMLBrnSliderElement: {
      prototype: HTMLBrnSliderElement;
      new (): HTMLBrnSliderElement;
    };
    

    interface HTMLBrnTabElement extends StencilComponents.BrnTab, HTMLStencilElement {}

    var HTMLBrnTabElement: {
      prototype: HTMLBrnTabElement;
      new (): HTMLBrnTabElement;
    };
    

    interface HTMLBrnTabsElement extends StencilComponents.BrnTabs, HTMLStencilElement {}

    var HTMLBrnTabsElement: {
      prototype: HTMLBrnTabsElement;
      new (): HTMLBrnTabsElement;
    };
    

    interface HTMLBrnToggleElement extends StencilComponents.BrnToggle, HTMLStencilElement {}

    var HTMLBrnToggleElement: {
      prototype: HTMLBrnToggleElement;
      new (): HTMLBrnToggleElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'brn-checkbox': JSXElements.BrnCheckboxAttributes;
    'brn-collapse': JSXElements.BrnCollapseAttributes;
    'brn-column': JSXElements.BrnColumnAttributes;
    'brn-dropdown': JSXElements.BrnDropdownAttributes;
    'brn-radio': JSXElements.BrnRadioAttributes;
    'brn-row': JSXElements.BrnRowAttributes;
    'brn-slider': JSXElements.BrnSliderAttributes;
    'brn-tab': JSXElements.BrnTabAttributes;
    'brn-tabs': JSXElements.BrnTabsAttributes;
    'brn-toggle': JSXElements.BrnToggleAttributes;
    }
  }

  namespace JSXElements {

    export interface BrnCheckboxAttributes extends HTMLAttributes {
      'checked'?: boolean;
      'onChanged'?: (event: CustomEvent<boolean>) => void;
      'type'?: keyof StyleType;
    }

    export interface BrnCollapseAttributes extends HTMLAttributes {
      'active'?: boolean;
    }

    export interface BrnColumnAttributes extends HTMLAttributes {
      'columns'?: number;
      'total'?: number;
    }

    export interface BrnDropdownAttributes extends HTMLAttributes {
      'active'?: boolean;
      'closeable'?: boolean;
    }

    export interface BrnRadioAttributes extends HTMLAttributes {
      'checked'?: boolean;
      'name'?: string;
      'onChanged'?: (event: CustomEvent<boolean>) => void;
      'type'?: keyof StyleType;
    }

    export interface BrnRowAttributes extends HTMLAttributes {

    }

    export interface BrnSliderAttributes extends HTMLAttributes {

    }

    export interface BrnTabAttributes extends HTMLAttributes {
      'active'?: boolean;
      'name'?: string;
      'onTabChanged'?: (event: CustomEvent<TabType>) => void;
      'onTabLoaded'?: (event: CustomEvent<TabType>) => void;
    }

    export interface BrnTabsAttributes extends HTMLAttributes {

    }

    export interface BrnToggleAttributes extends HTMLAttributes {
      'checked'?: boolean;
      'onChanged'?: (event: CustomEvent<boolean>) => void;
      'type'?: keyof StyleType;
    }
  }

  interface HTMLElementTagNameMap {
    'brn-checkbox': HTMLBrnCheckboxElement
    'brn-collapse': HTMLBrnCollapseElement
    'brn-column': HTMLBrnColumnElement
    'brn-dropdown': HTMLBrnDropdownElement
    'brn-radio': HTMLBrnRadioElement
    'brn-row': HTMLBrnRowElement
    'brn-slider': HTMLBrnSliderElement
    'brn-tab': HTMLBrnTabElement
    'brn-tabs': HTMLBrnTabsElement
    'brn-toggle': HTMLBrnToggleElement
  }

  interface ElementTagNameMap {
    'brn-checkbox': HTMLBrnCheckboxElement;
    'brn-collapse': HTMLBrnCollapseElement;
    'brn-column': HTMLBrnColumnElement;
    'brn-dropdown': HTMLBrnDropdownElement;
    'brn-radio': HTMLBrnRadioElement;
    'brn-row': HTMLBrnRowElement;
    'brn-slider': HTMLBrnSliderElement;
    'brn-tab': HTMLBrnTabElement;
    'brn-tabs': HTMLBrnTabsElement;
    'brn-toggle': HTMLBrnToggleElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;