/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  StyleType,
  TabType,
} from './objects/types';

export namespace Components {
  interface BrnCheckbox {
    'checked': boolean;
    'type': keyof StyleType;
  }
  interface BrnCollapse {
    'active': boolean;
  }
  interface BrnColumn {
    'columns': number;
    'total': number;
  }
  interface BrnDropdown {
    'active': boolean;
    'closeable': boolean;
  }
  interface BrnRadio {
    'checked': boolean;
    'name': string;
    'type': keyof StyleType;
  }
  interface BrnRow {}
  interface BrnSlider {}
  interface BrnTab {
    'active': boolean;
    'name': string;
  }
  interface BrnTabs {}
  interface BrnToggle {
    'checked': boolean;
    'type': keyof StyleType;
  }
}

declare global {


  interface HTMLBrnCheckboxElement extends Components.BrnCheckbox, HTMLStencilElement {}
  var HTMLBrnCheckboxElement: {
    prototype: HTMLBrnCheckboxElement;
    new (): HTMLBrnCheckboxElement;
  };

  interface HTMLBrnCollapseElement extends Components.BrnCollapse, HTMLStencilElement {}
  var HTMLBrnCollapseElement: {
    prototype: HTMLBrnCollapseElement;
    new (): HTMLBrnCollapseElement;
  };

  interface HTMLBrnColumnElement extends Components.BrnColumn, HTMLStencilElement {}
  var HTMLBrnColumnElement: {
    prototype: HTMLBrnColumnElement;
    new (): HTMLBrnColumnElement;
  };

  interface HTMLBrnDropdownElement extends Components.BrnDropdown, HTMLStencilElement {}
  var HTMLBrnDropdownElement: {
    prototype: HTMLBrnDropdownElement;
    new (): HTMLBrnDropdownElement;
  };

  interface HTMLBrnRadioElement extends Components.BrnRadio, HTMLStencilElement {}
  var HTMLBrnRadioElement: {
    prototype: HTMLBrnRadioElement;
    new (): HTMLBrnRadioElement;
  };

  interface HTMLBrnRowElement extends Components.BrnRow, HTMLStencilElement {}
  var HTMLBrnRowElement: {
    prototype: HTMLBrnRowElement;
    new (): HTMLBrnRowElement;
  };

  interface HTMLBrnSliderElement extends Components.BrnSlider, HTMLStencilElement {}
  var HTMLBrnSliderElement: {
    prototype: HTMLBrnSliderElement;
    new (): HTMLBrnSliderElement;
  };

  interface HTMLBrnTabElement extends Components.BrnTab, HTMLStencilElement {}
  var HTMLBrnTabElement: {
    prototype: HTMLBrnTabElement;
    new (): HTMLBrnTabElement;
  };

  interface HTMLBrnTabsElement extends Components.BrnTabs, HTMLStencilElement {}
  var HTMLBrnTabsElement: {
    prototype: HTMLBrnTabsElement;
    new (): HTMLBrnTabsElement;
  };

  interface HTMLBrnToggleElement extends Components.BrnToggle, HTMLStencilElement {}
  var HTMLBrnToggleElement: {
    prototype: HTMLBrnToggleElement;
    new (): HTMLBrnToggleElement;
  };
  interface HTMLElementTagNameMap {
    'brn-checkbox': HTMLBrnCheckboxElement;
    'brn-collapse': HTMLBrnCollapseElement;
    'brn-column': HTMLBrnColumnElement;
    'brn-dropdown': HTMLBrnDropdownElement;
    'brn-radio': HTMLBrnRadioElement;
    'brn-row': HTMLBrnRowElement;
    'brn-slider': HTMLBrnSliderElement;
    'brn-tab': HTMLBrnTabElement;
    'brn-tabs': HTMLBrnTabsElement;
    'brn-toggle': HTMLBrnToggleElement;
  }
}

declare namespace LocalJSX {
  interface BrnCheckbox extends JSXBase.HTMLAttributes<HTMLBrnCheckboxElement> {
    'checked'?: boolean;
    'onChanged'?: (event: CustomEvent<boolean>) => void;
    'type'?: keyof StyleType;
  }
  interface BrnCollapse extends JSXBase.HTMLAttributes<HTMLBrnCollapseElement> {
    'active'?: boolean;
  }
  interface BrnColumn extends JSXBase.HTMLAttributes<HTMLBrnColumnElement> {
    'columns'?: number;
    'total'?: number;
  }
  interface BrnDropdown extends JSXBase.HTMLAttributes<HTMLBrnDropdownElement> {
    'active'?: boolean;
    'closeable'?: boolean;
  }
  interface BrnRadio extends JSXBase.HTMLAttributes<HTMLBrnRadioElement> {
    'checked'?: boolean;
    'name'?: string;
    'onChanged'?: (event: CustomEvent<boolean>) => void;
    'type'?: keyof StyleType;
  }
  interface BrnRow extends JSXBase.HTMLAttributes<HTMLBrnRowElement> {}
  interface BrnSlider extends JSXBase.HTMLAttributes<HTMLBrnSliderElement> {}
  interface BrnTab extends JSXBase.HTMLAttributes<HTMLBrnTabElement> {
    'active'?: boolean;
    'name'?: string;
    'onTabChanged'?: (event: CustomEvent<TabType>) => void;
    'onTabLoaded'?: (event: CustomEvent<TabType>) => void;
  }
  interface BrnTabs extends JSXBase.HTMLAttributes<HTMLBrnTabsElement> {}
  interface BrnToggle extends JSXBase.HTMLAttributes<HTMLBrnToggleElement> {
    'checked'?: boolean;
    'onChanged'?: (event: CustomEvent<boolean>) => void;
    'type'?: keyof StyleType;
  }

  interface IntrinsicElements {
    'brn-checkbox': BrnCheckbox;
    'brn-collapse': BrnCollapse;
    'brn-column': BrnColumn;
    'brn-dropdown': BrnDropdown;
    'brn-radio': BrnRadio;
    'brn-row': BrnRow;
    'brn-slider': BrnSlider;
    'brn-tab': BrnTab;
    'brn-tabs': BrnTabs;
    'brn-toggle': BrnToggle;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


